# This is a basic workflow to help you get started with Actions
name: Deploy Azure Container Apps Basic CI/CD Sample

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Bicep Linter
        run: az bicep build --file ./container-apps-ci-cd/deploy/main.bicep

  validate:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/arm-deploy@v1
        name: Run preflight validation
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./container-apps-ci-cd/deploy/main.bicep
          parameters: registryName=${{ secrets.REGISTRY_NAME }}
          deploymentMode: Validate

  deploy:
    runs-on: ubuntu-latest
    environment: Dev
    needs: validate
    steps:
      - uses: actions/checkout@v2

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - uses: azure/arm-deploy@v1
        name: Deploy Bicep Template
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./container-apps-ci-cd/deploy/main.bicep
          parameters: registryName=${{ secrets.REGISTRY_NAME }}
          deploymentMode: Incremental
          
      - name: 'Get ACR Credentials'
        id: getacrcreds
        run: |
          loginName=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query username -o tsv)
          password=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          echo "::set-output name=loginName::$loginName"
          echo "::set-output name=password::$password"

  build-container-image:
    runs-on: ubuntu-latest
    needs: deploy
    defaults:
      run:
        working-directory: ./src/*
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: 'Build and Push Image to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ steps.getacrcreds.outputs.loginName }}
          password: ${{ steps.getacrcreds.outputs.password }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapi:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapi:${{ github.sha }}

  deploy-container-app:
    runs-on: ubuntu-latest
    needs: build-container-image
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy Container App'
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Installing containerapp extension"
          az extension add -n containerapp --yes
          echo "Starting Deploying"
          az containerapp update -n weatherapi -g ${{ secrets.AZURE_RG }} -i ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherapi:${{ github.sha }} --debug

  